#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
sys.path.insert(0, os.path.abspath('.'))

from extlinks import *

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.extlinks',
              'sphinx.ext.mathjax',
              'sphinx.ext.imgconverter']
        #       'breathe']
        #       'exhale']

# Add any paths that contain templates here, relative to this directory.
# templates_path = ['templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = '@prj_name@'
copyright = '@prj_copyright@'
author = '@prj_author@'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '@prj_version@'
# The full version, including alpha/beta/rc tags.
release = '@prj_version@'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['doc', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

numfig = True
numfig_format = {'figure': 'Figure %s',
                 'table': 'Table %s',
                 'code-block': 'Listing %s',
                 'section': 'Section %s'}

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'
# html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
# Override default css to get a larger width for local build


def setup(app):
    app.add_stylesheet('theme_overrides.css')
    # app.add_javascript('custom.js')

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    "collapse_navigation" : False
}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.
# "<project> v<release> documentation" by default.
#
html_title = u'@prj_name@ @prj_version@'

# A shorter title for the navigation bar.  Default is the same as html_title.
#
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#
html_logo = "@prj_dir@/doc/static/rti-logo.png"

# The name of an image file (relative to this directory) to use as a favicon of
# the docs.  This file should be a Windows icon file (.ico) being 16x16 or
# 32x32 pixels large.
#
html_favicon = "@prj_dir@/doc/static/favicon.ico"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = [
    '@prj_dir@/doc/static'
]

html_show_sourcelink = False


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = '@prj_prefix@Doc'


# -- Options for LaTeX output ---------------------------------------------

latex_engine = 'lualatex'

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
     'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    'pointsize': '11pt',

    'preamble': '''\
\\sphinxsetup{TitleColor={named}{black},InnerLinkColor={named}{black},OuterLinkColor={named}{blue}}
\\usepackage[utf8]{inputenc}
\\usepackage[titles]{tocloft}
\\usepackage{newunicodechar}
\\usepackage{multirow}
\\usepackage{fontspec}
\\usepackage{hyperref}
\\usepackage{graphicx}
\\setkeys{Gin}{width=.85\\textwidth}
\\hypersetup{bookmarksnumbered}
\\setcounter{tocdepth}{3}
\\usepackage[draft]{minted}\\fvset{breaklines=true, breakanywhere=true}''',
    'printindex': '\\footnotesize\\raggedright\\printindex',
    'inputenc': '',
    'utf8extra': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',

    #'tableofcontents' : ''
    'classoptions': ',openany,oneside',
    #releasename
    'releasename': 'Version',
    #fncychap (formatting of the chapter title)
    'fncychap': '',
    # main page
    'maketitle': '''\
        \\pagenumbering{Roman} %%% to avoid page 1 conflict with actual page 1

        \\begin{titlepage}
            \\centering

            \\vspace{40mm} %%% * is used to give space from top
            \\textbf{\\Huge{''' + project + '''}}
            
            \\vspace{7mm}
            \\textbf{\\Large{User\'s Manual}}
            
            \\vspace{17mm}
            \\textbf{\\Large{Version ''' + version + '''}}
            
            \\vspace{100mm}
            \\begin{figure}[!hb]
                \\centering
                \\includegraphics[scale=0.2]{rti-logo-tag-StackedRight.png}
            \\end{figure}

            \\vspace{0mm}

        \\end{titlepage}
        '''
}

latex_use_modindex = True

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, '@prj_name@.tex', '@prj_name@ User\'s Manual',
     '@prj_author@', 'manual'),
]

latex_logo = "@NANO_BUILD_SYS_DIR@/doc/static/rti-logo-tag-StackedRight.png"


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, '@prj_name@', '@prj_name@ Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, '@prj_name@', '@prj_name@ Documentation',
     author, '@prj_name@', '@prj_description@',
     'Protocol'),
]

# -- Custom roles
from docutils import nodes

def role_litrep(name, rawtext, text, lineno, inliner,
            options={}, content=[]):

    node = nodes.Text(text)
    node.source, node.line = inliner.reporter.get_source_and_line(lineno)
    return [node],[]

from docutils.parsers.rst import roles
roles.register_local_role('litrep', role_litrep)

rst_epilog = """
.. |version| replace:: {0}
.. |project| replace:: {1}
""".format(version, project)


# -- links
extlinks = {
    'link_arduino_ide': (LINK_ARDUINO_IDE, 'link_arduino_ide'),
    'link_arduino_libs': (LINK_ARDUINO_LIBS, 'link_arduino_libs'),
    'link_platformio': (LINK_PLATFORMIO, 'link_platformio'),
    'link_platformio_docs_libs': (LINK_PLATFORMIO_DOCS_LIBS, 'link_platformio_docs_libs'),
    'link_sphinx': (LINK_SPHINX, 'link_sphinx'),
    'link_doxygen': (LINK_DOXYGEN, 'link_doxygen'),
    'link_cmake': (LINK_CMAKE, 'link_cmake'),
    'link_cmake_var': (LINK_CMAKE_VAR, 'link_cmake_var'),
    'link_git_windows': (LINK_GIT_WINDOWS, 'link_git_windows'),
    'link_ms_cmdlinebuild': (LINK_MS_CMDLINEBUILD, 'link_ms_cmdlinebuild'),
    'link_omg_ddsxrce':(LINK_OMG_DDSXRCE, 'link_omg_ddsxrce'),
    'link_omg_ddsxml':(LINK_OMG_DDSXML, 'link_omg_ddsxml'),
    'link_connext_home': (LINK_CONNEXT_HOME, 'link_connext_home'),
    'link_connext_install': (LINK_CONNEXT_INSTALL, 'link_connext_install'),
    'link_connext_shapes': (LINK_CONNEXT_SHAPES, 'link_connext_shapes'),
    'link_connext_xmlappcreation': (LINK_CONNEXT_XMLAPPCREATION, 'link_connext_xmlappcreation'),
    'link_connext_experimental': (LINK_CONNEXT_EXPERIMENTAL, 'link_connext_experimental'),
    'link_nano_client_docs': (LINK_NANO_CLIENT_DOCS, 'link_nano_client_docs'),
    'link_nano_client_git': (LINK_NANO_CLIENT_GIT, 'link_nano_client_git'),
    'link_nano_agent_docs': (LINK_NANO_AGENT_DOCS, 'link_nano_agent_docs'),
    'link_nano_agent_git': (LINK_NANO_AGENT_GIT, 'link_nano_agent_git')
}

rst_prolog = """
.. |link_nano_client_docs| replace:: %s
.. |link_nano_client_git| replace:: %s
.. |link_nano_agent_docs| replace:: %s
.. |link_nano_agent_git| replace:: %s
""" % (LINK_NANO_CLIENT_DOCS % "",
       LINK_NANO_CLIENT_GIT % "",
       LINK_NANO_AGENT_DOCS % "",
       LINK_NANO_AGENT_GIT % "")

# API docs integration is currently disabled
# # Setup the breathe extension
# breathe_projects = {
#     "@prj_name@": "@prj_doc_doxygen_dir@/xml"
# }
# breathe_default_project = "@prj_name@"

# Tell sphinx what the primary language being documented is.
primary_domain = 'c'

# Tell sphinx what the pygments highlight language should be.
highlight_language = 'c'